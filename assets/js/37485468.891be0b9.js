"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3452],{8673:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/image-141-b8e065a0549f141e5e08636bb673d487.jpg"},11470:(e,n,t)=>{t.d(n,{A:()=>w});var r=t(96540),i=t(34164),s=t(23104),o=t(56347),a=t(205),l=t(57485),c=t(31682),d=t(70679);function u(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,r.useMemo)(()=>{const e=n??function(e){return u(e).map(({props:{value:e,label:n,attributes:t,default:r}})=>({value:e,label:n,attributes:t,default:r}))}(t);return function(e){const n=(0,c.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}function p({value:e,tabValues:n}){return n.some(n=>n.value===e)}function m({queryString:e=!1,groupId:n}){const t=(0,o.W6)(),i=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,l.aZ)(i),(0,r.useCallback)(e=>{if(!i)return;const n=new URLSearchParams(t.location.search);n.set(i,e),t.replace({...t.location,search:n.toString()})},[i,t])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,s=h(e),[o,l]=(0,r.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find(e=>e.default)??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:s})),[c,u]=m({queryString:t,groupId:i}),[g,f]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,i]=(0,d.Dv)(n);return[t,(0,r.useCallback)(e=>{n&&i.set(e)},[n,i])]}({groupId:i}),b=(()=>{const e=c??g;return p({value:e,tabValues:s})?e:null})();(0,a.A)(()=>{b&&l(b)},[b]);return{selectedValue:o,selectValue:(0,r.useCallback)(e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),f(e)},[u,f,s]),tabValues:s}}var f=t(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(74848);function j({className:e,block:n,selectedValue:t,selectValue:r,tabValues:o}){const a=[],{blockElementScrollPositionUntilNextRender:l}=(0,s.a_)(),c=e=>{const n=e.currentTarget,i=a.indexOf(n),s=o[i].value;s!==t&&(l(n),r(s))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=a.indexOf(e.currentTarget)+1;n=a[t]??a[0];break}case"ArrowLeft":{const t=a.indexOf(e.currentTarget)-1;n=a[t]??a[a.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":n},e),children:o.map(({value:e,label:n,attributes:r})=>(0,x.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{a.push(e)},onKeyDown:d,onClick:c,...r,className:(0,i.A)("tabs__item",b.tabItem,r?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function v({lazy:e,children:n,selectedValue:t}){const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=s.find(e=>e.props.value===t);return e?(0,r.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:s.map((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function y(e){const n=g(e);return(0,x.jsxs)("div",{className:(0,i.A)("tabs-container",b.tabList),children:[(0,x.jsx)(j,{...n,...e}),(0,x.jsx)(v,{...n,...e})]})}function w(e){const n=(0,f.A)();return(0,x.jsx)(y,{...e,children:u(e.children)},String(n))}},19365:(e,n,t)=>{t.d(n,{A:()=>o});t(96540);var r=t(34164);const i={tabItem:"tabItem_Ymn6"};var s=t(74848);function o({children:e,hidden:n,className:t}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,t),hidden:n,children:e})}},26931:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Document Home/peripherals-and-interfaces/hdmi","title":"HDMI OUT","description":"The HDMI connector is component No.9 in the following figure.","source":"@site/docs/Document Home/2.peripherals-and-interfaces/4.hdmi.md","sourceDirName":"Document Home/2.peripherals-and-interfaces","slug":"/Document Home/peripherals-and-interfaces/hdmi","permalink":"/rubikpi-ubuntu-user-manual-test-en.github.io/docs/Document Home/peripherals-and-interfaces/hdmi","draft":false,"unlisted":false,"editUrl":"https://github.com/hongyang-rp/rubikpi-ubuntu-user-manual-test-en.github.io/tree/main/docs/Document Home/2.peripherals-and-interfaces/4.hdmi.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Camera Serial Interface (CSI)","permalink":"/rubikpi-ubuntu-user-manual-test-en.github.io/docs/Document Home/peripherals-and-interfaces/csi"},"next":{"title":"DisplayPort","permalink":"/rubikpi-ubuntu-user-manual-test-en.github.io/docs/Document Home/peripherals-and-interfaces/displayport"}}');var i=t(74848),s=t(28453);t(11470),t(19365);const o={},a="HDMI OUT",l={},c=[{value:"CEC",id:"cec",level:2},{value:"HDMI OUT touchscreen",id:"hdmi-out-touchscreen",level:2},{value:"HDMI OUT debugging",id:"hdmi-out-debugging",level:2},{value:"Obtain lt9611 logs",id:"obtain-lt9611-logs",level:3},{value:"Obtain DSI logs",id:"obtain-dsi-logs",level:3},{value:"View regulator information",id:"view-regulator-information",level:3},{value:"View interface information",id:"view-interface-information",level:3},{value:"Common DPU debug information",id:"common-dpu-debug-information",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"hdmi-out",children:"HDMI OUT"})}),"\n",(0,i.jsx)(n.p,{children:"The HDMI connector is component No.9 in the following figure."}),"\n",(0,i.jsx)(n.p,{children:"RUBIK Pi 3 HDMI specifications are as follows:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"HDMI 1.4"}),"\n",(0,i.jsx)(n.li,{children:"3840 x 2160@30 fps"}),"\n",(0,i.jsx)(n.li,{children:"DSI 0 to HDMI (LT9611)"}),"\n",(0,i.jsx)(n.li,{children:"Supports CEC"}),"\n",(0,i.jsx)(n.li,{children:"Supports resolution auto-adjustment"}),"\n",(0,i.jsx)(n.li,{children:"Supports hot swapping"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(30628).A+"",width:"924",height:"730"})}),"\n",(0,i.jsx)(n.h2,{id:"cec",children:"CEC"}),"\n",(0,i.jsx)(n.p,{children:"HDMI Consumer Electronics Control (CEC) is a feature of HDMI designed to interconnect and control multiple devices via a single HDMI cable. CEC facilitates communication through a dedicated CEC pin. For example, multiple devices can be controlled with a single remote control."}),"\n",(0,i.jsx)(n.p,{children:"Run the following command to install cec-client."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"sudo apt install cec-utils\n"})}),"\n",(0,i.jsx)(n.p,{children:"After connecting the HDMI cable to a TV, run the following command to check whether the TV supports CEC."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"echo 'scan' | cec-client -s -d 1\n"})}),"\n",(0,i.jsx)(n.p,{children:"If the TV supports CEC, you will see the following output:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-plain text",children:"opening a connection to the CEC adapter...\r\nrequesting CEC bus information ...\r\nCEC bus information\r\n===================\r\ndevice #0: TV\r\naddress:       0.0.0.0\r\nactive source: no\r\nvendor:        Sony\r\nosd string:    TV\r\nCEC version:   1.4\r\npower status:  standby\r\nlanguage:      eng\r\n\r\n\r\ndevice #1: Recorder 1\r\naddress:       1.0.0.0\r\nactive source: no\r\nvendor:        Pulse Eight\r\nosd string:    CECTester\r\nCEC version:   1.4\r\npower status:  on\r\nlanguage:      eng\r\n\r\n\r\ndevice #4: Playback 1\r\naddress:       3.0.0.0\r\nactive source: no\r\nvendor:        Sony\r\nosd string:    PlayStation 4\r\nCEC version:   1.3a\r\npower status:  standby\r\nlanguage:      ???\n"})}),"\n",(0,i.jsx)(n.p,{children:"If the TV supports the CEC function, run the following commands on RUBIK Pi 3 to increase or decrease the TV volume."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"echo 'volup' | cec-client -t p -s\r\necho 'voldown' | cec-client -t p -s\n"})}),"\n",(0,i.jsxs)(n.p,{children:["For more information about how to use cec-client, use the ",(0,i.jsx)(n.code,{children:"-h"})," parameter."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(8673).A+"",width:"727",height:"509"})}),"\n",(0,i.jsx)(n.h2,{id:"hdmi-out-touchscreen",children:"HDMI OUT touchscreen"}),"\n",(0,i.jsx)(n.p,{children:"RUBIK Pi 3 supports HDMI OUT touchscreen with 1024 x 600P resolution by default:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(94579).A+"",width:"1000",height:"750"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["The screen used in the picture above is a ",(0,i.jsx)(n.a,{href:"https://a.co/d/cTl7rkN",children:'7" IPS HD touch screen'}),"."]})}),"\n",(0,i.jsx)(n.h2,{id:"hdmi-out-debugging",children:"HDMI OUT debugging"}),"\n",(0,i.jsx)(n.p,{children:"RUBIK Pi 3 uses the LT9611 DSI-to-HDMI bridge chip."}),"\n",(0,i.jsx)(n.p,{children:"The following table lists the configurations required for integrating the bridge."}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"DTSI Node"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Set the DSI-to-HDMI bridge panel as Primary"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"&sde_dsi { qcom, dsi-default-panel = <&dsi_ext_bridge_1080p>; }"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Configure reference power supply entries for the bridge chip"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"&sde_dsi { vddio-supply = <&vreg_18c_ip62>; vdda-9p9-supply = <&vreg_11oc_9p88>; vdda-9p9-supply = <&vreg_11oc_9p88>; }"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Configure panel reset GPIOs for the bridge chip"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"lt9611: lt,lt9611 { reset-options = <&tlmm 21 0>; }"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Configure the DSI host driver in the external bridge mode to work with the third-party DSI-to-HDMI bridge chip"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"qcom,mdss-dsi-ext-bridge-mode;"})})]})]})]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["Run the ",(0,i.jsx)(n.code,{children:"sudo -i"})," command to switch to the root user."]})}),"\n",(0,i.jsx)(n.h3,{id:"obtain-lt9611-logs",children:"Obtain lt9611 logs"}),"\n",(0,i.jsx)(n.p,{children:"Run the following command to obtain LT9611 logs:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"dmesg | grep lt9611\n"})}),"\n",(0,i.jsx)(n.p,{children:"Check the logs. The following message indicates that HDMI OUT is functioning properly."}),"\n",(0,i.jsx)(n.p,{children:"This log records the initialization of the LT9611 chip and the HDMI connection process, from firmware version detection to CEC initialization, indicating that the chip has started normally."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The firmware version of the chip is 0xe2.17.02. This indicates that during initialization, the driver successfully reads the version information."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The Consumer Electronics Control (CEC) function adapter of the LT9611 has been successfully registered."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"CEC initialization is complete, which means that the CEC module of LT9611 is functioning properly."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The chip successfully reads the Hot Plug Detection (HPD) status, and a value is returned, confirming the connection of the HDMI device."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The chip detects the video signal parameters: horizontal resolution 1920 pixels, vertical resolution 1080 pixels, and pixel clock frequency 148500 kHz (148.5 MHz). This is a typical 1080p resolution (Full HD) with a 60 Hz refresh rate configuration."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"[    5.492765] lt9611 9-0039: LT9611 revision: 0xe2.17.02\r\n[    5.570258] lt9611 9-0039: CEC adapter registered\r\n[    5.582944] lt9611 9-0039: CEC init success\r\n\r\n[    8.233028] lt9611 9-0039: success to read hpd status: 13\r\n[    8.233044] lt9611_device_connect_status_notify: send msg[Hdmi Connection] ret[32]\r\n[    8.345015] lt9611 9-0039: hdisplay=1920, vdisplay=1080, clock=148500 \r\n[    8.836662] lt9611 9-0039: video check: hactive_a=1920, hactive_b=1920, vactive=1080, v_total=1125, h_total_sysclk=401, mipi_video_format=170\n"})}),"\n",(0,i.jsx)(n.h3,{id:"obtain-dsi-logs",children:"Obtain DSI logs"}),"\n",(0,i.jsx)(n.p,{children:"The output DSI information can also be used for debugging. DSI stands for Display Serial Interface, which is typically related to display drivers for mobile devices or embedded systems (such as MIPI DSI).\r\nThe following command is used to view kernel logs related to DSI for debugging display drivers or hardware issues."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"dmesg | grep dsi\n"})}),"\n",(0,i.jsx)(n.p,{children:"Sample output:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"[    6.831249] i2c 9-0039: Fixed dependency cycle(s) with /soc@0/display-subsystem@ae00000/dsi@ae9400\r\n[   15.070444] lt9611 9-0039: failed to find dsi host\r\n[   17.855362] lt9611 9-0039: failed to find dsi host\r\n[   18.007167] platform ae01000.display-controller: Fixed dependency cycle(s) with /soc@0/display-su0\r\n[   18.014168] platform ae01000.display-controller: Fixed dependency cycle(s) with /soc@0/display-su0\r\n[   18.014317] lt9611 9-0039: Fixed dependency cycle(s) with /soc@0/display-subsystem@ae00000/dsi@ae0\r\n[   18.014460] platform ae94000.dsi: Fixed dependency cycle(s) with /soc@0/geniqup@ac0000/i2c@a840009\r\n[   18.014514] platform ae94000.dsi: Fixed dependency cycle(s) with /soc@0/display-subsystem@ae000000\r\n[   18.372993] lt9611 9-0039: failed to find dsi host\r\n[   18.803189] msm_dpu ae01000.display-controller: bound ae94000.dsi (ops dsi_ops [msm])\n"})}),"\n",(0,i.jsx)(n.h3,{id:"view-regulator-information",children:"View regulator information"}),"\n",(0,i.jsx)(n.p,{children:"Run the following command to view the regulator status and voltage."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"cat /sys/kernel/debug/regulator/regulator_summary\n"})}),"\n",(0,i.jsx)(n.h3,{id:"view-interface-information",children:"View interface information"}),"\n",(0,i.jsx)(n.p,{children:"To retrieve the debug dump output (display interface number, VSync count, underload count, and interface mode), run the following command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"cat /sys/kernel/debug/dri/0/encoder*/status\n"})}),"\n",(0,i.jsx)(n.p,{children:"Sample output:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"intf:1  wb:-1  vsync:    2580     underrun:       0    frame_done_cnt:0mode: INTF_MODE_VIDEO\r\nintf:-1  wb:2  vsync:       0     underrun:       0    frame_done_cnt:0mode: INTF_MODE_WB_LINE\n"})}),"\n",(0,i.jsx)(n.h3,{id:"common-dpu-debug-information",children:"Common DPU debug information"}),"\n",(0,i.jsx)(n.p,{children:"The common Display Processing Unit (DPU) debug information is explained as follows:"}),"\n",(0,i.jsx)(n.p,{children:"Run the following command to check the DPU clock rate:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"cat /sys/kernel/debug/clk/clk_summary | grep disp_cc\n"})}),"\n",(0,i.jsx)(n.p,{children:"Set the DPU to performance mode."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"cd /sys/kernel/debug/dri/0/debug/core_perf/\r\necho 1 > perf_mode\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(96540);const i={},s=r.createContext(i);function o(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:n},e.children)}},30628:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/image-140-7c0b00df38ceac4a7cff4d470bca3cbd.jpg"},94579:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/img_v3_02h3_18251d67-83e7-498c-b056-5a11783ed13g-14723a76887da8746043fd7ac2a7a1a8.jpg"}}]);