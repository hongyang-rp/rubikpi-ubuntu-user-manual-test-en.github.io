"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1244],{28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>r});var t=i(96540);const a={},s=t.createContext(a);function o(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(s.Provider,{value:n},e.children)}},91287:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"Document Home/quick-start/QDemo","title":"Qualcomm\xae QDemo","description":"The Qualcomm\xae QDemo application provides a graphical interface to explore multimedia and AI sample applications powered by the Qualcomm Intelligent Multimedia Product (QIMP) SDK. Designed for developers working on Ubuntu-based Dragonwing boards, QDemo enables rapid evaluation of AI pipelines and multimedia capabilities\u2014without writing GStreamer code manually.","source":"@site/docs/Document Home/1.quick-start/3.QDemo.md","sourceDirName":"Document Home/1.quick-start","slug":"/Document Home/quick-start/QDemo","permalink":"/rubikpi-ubuntu-user-manual-test-en.github.io/docs/Document Home/quick-start/QDemo","draft":false,"unlisted":false,"editUrl":"https://github.com/hongyang-rp/rubikpi-ubuntu-user-manual-test-en.github.io/tree/main/docs/Document Home/1.quick-start/3.QDemo.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Prebuilt Sample Applications","permalink":"/rubikpi-ubuntu-user-manual-test-en.github.io/docs/Document Home/quick-start/Prebuilt Sample Applications"},"next":{"title":"Explore Additional Application Development Paths","permalink":"/rubikpi-ubuntu-user-manual-test-en.github.io/docs/Document Home/quick-start/Explore-more"}}');var a=i(74848),s=i(28453);const o={},r="Qualcomm\xae QDemo",l={},c=[{value:"GUI-Based Experience with QIMP SDK",id:"gui-based-experience-with-qimp-sdk",level:2},{value:"Pre-requisites",id:"pre-requisites",level:2},{value:"Getting Started with QDemo",id:"getting-started-with-qdemo",level:2}];function u(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"qualcomm-qdemo",children:"Qualcomm\xae QDemo"})}),"\n",(0,a.jsx)(n.p,{children:"The Qualcomm\xae QDemo application provides a graphical interface to explore multimedia and AI sample applications powered by the Qualcomm Intelligent Multimedia Product (QIMP) SDK. Designed for developers working on Ubuntu-based Dragonwing boards, QDemo enables rapid evaluation of AI pipelines and multimedia capabilities\u2014without writing GStreamer code manually."}),"\n",(0,a.jsx)(n.h2,{id:"gui-based-experience-with-qimp-sdk",children:"GUI-Based Experience with QIMP SDK"}),"\n",(0,a.jsxs)(n.p,{children:["QDemo is built to showcase the power of the QIMP SDK through a simple GUI. Instead of manually constructing GStreamer pipelines, developers can launch preconfigured sample applications with just a few clicks. These applications demonstrate real-time performance by leveraging GPU and NPU acceleration, thanks to QIMP\u2019s zero-copy architecture.",(0,a.jsx)(n.br,{}),"\n","The SDK handles tasks like video capture, resizing, cropping, inference, and rendering\u2014all orchestrated through GStreamer plugins such as:"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"qtivtransform"}),": Accelerates color conversion, cropping, and resizing on GPU.",(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.code,{children:"qtimltflite"}),": Executes TensorFlow Lite models on NPU."]}),"\n",(0,a.jsx)(n.p,{children:"This setup allows developers to focus on evaluating performance and capabilities, rather than low-level implementation."}),"\n",(0,a.jsx)(n.h2,{id:"pre-requisites",children:"Pre-requisites"}),"\n",(0,a.jsx)(n.p,{children:"Before launching QDemo, ensure the following setup on your Dragonwing SBC:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Ubuntu OS flashed and terminal access available."}),"\n",(0,a.jsx)(n.li,{children:"SBC mode enabled with mouse, keyboard, HDMI monitor, and cable connected."}),"\n",(0,a.jsx)(n.li,{children:"Run install_ppa_pkgs.sh to install required packages."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"getting-started-with-qdemo",children:"Getting Started with QDemo"}),"\n",(0,a.jsx)(n.p,{children:"To begin exploring QDemo, follow these step-by-step setup instructions to install dependencies, configure your device, and launch the graphical interface.\r\nThis will allow you to run multimedia and AI sample applications with just a few clicks\u2014no manual pipeline coding required."}),"\n",(0,a.jsxs)(n.p,{children:["1: Install Dependencies",(0,a.jsx)(n.br,{}),"\n","Open the terminal from SBC and install following packages."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"sudo apt-get install libgstreamer1.0-dev gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-alsa gstreamer1.0-gtk3\r\nsudo apt-get install python3-gi-cairo gir1.2-gtk-3.0\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsx)(n.li,{children:"Create media, labels and models folder and give full permission."}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"sudo mkdir -p /etc/media\r\nsudo mkdir -p /etc/labels\r\nsudo mkdir -p /etc/models\r\nsudo chown -R ubuntu:ubuntu media/\r\nsudo chown -R ubuntu:ubuntu labels/\r\nsudo chown -R ubuntu:ubuntu models/\r\nwget -P /etc/media/ https://raw.githubusercontent.com/quic/sample-apps-for-qualcomm-linux/refs/heads/main/scripts/downl\u2026\r\nwget -P /etc/media/ https://github.com/quic/sample-apps-for-qualcomm-linux/blob/main/artifacts/qdemo/Qdemo.gif\r\nwget -P /etc/media/ https://github.com/quic/sample-apps-for-qualcomm-linux/blob/main/artifacts/qdemo/Qdemo.png\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"3",children:["\n",(0,a.jsx)(n.li,{children:"Get a video.mp5 and push onto /etc/media folder and give full permissions."}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"sudo chmod 777 /etc/media/video.mp4\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"4",children:["\n",(0,a.jsx)(n.li,{children:"Launch the GUI\r\ngst-gui-launcher-app.py"}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}}}]);