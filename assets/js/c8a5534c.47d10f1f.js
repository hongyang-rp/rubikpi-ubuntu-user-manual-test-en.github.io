"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7955],{11470:(e,n,r)=>{r.d(n,{A:()=>S});var s=r(96540),t=r(34164),a=r(23104),i=r(56347),o=r(205),d=r(57485),l=r(31682),c=r(70679);function u(e){return s.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){const{values:n,children:r}=e;return(0,s.useMemo)(()=>{const e=n??function(e){return u(e).map(({props:{value:e,label:n,attributes:r,default:s}})=>({value:e,label:n,attributes:r,default:s}))}(r);return function(e){const n=(0,l.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,r])}function m({value:e,tabValues:n}){return n.some(n=>n.value===e)}function p({queryString:e=!1,groupId:n}){const r=(0,i.W6)(),t=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,d.aZ)(t),(0,s.useCallback)(e=>{if(!t)return;const n=new URLSearchParams(r.location.search);n.set(t,e),r.replace({...r.location,search:n.toString()})},[t,r])]}function f(e){const{defaultValue:n,queryString:r=!1,groupId:t}=e,a=h(e),[i,d]=(0,s.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const r=n.find(e=>e.default)??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:a})),[l,u]=p({queryString:r,groupId:t}),[f,x]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[r,t]=(0,c.Dv)(n);return[r,(0,s.useCallback)(e=>{n&&t.set(e)},[n,t])]}({groupId:t}),g=(()=>{const e=l??f;return m({value:e,tabValues:a})?e:null})();(0,o.A)(()=>{g&&d(g)},[g]);return{selectedValue:i,selectValue:(0,s.useCallback)(e=>{if(!m({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);d(e),u(e),x(e)},[u,x,a]),tabValues:a}}var x=r(92303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=r(74848);function _({className:e,block:n,selectedValue:r,selectValue:s,tabValues:i}){const o=[],{blockElementScrollPositionUntilNextRender:d}=(0,a.a_)(),l=e=>{const n=e.currentTarget,t=o.indexOf(n),a=i[t].value;a!==r&&(d(n),s(a))},c=e=>{let n=null;switch(e.key){case"Enter":l(e);break;case"ArrowRight":{const r=o.indexOf(e.currentTarget)+1;n=o[r]??o[0];break}case"ArrowLeft":{const r=o.indexOf(e.currentTarget)-1;n=o[r]??o[o.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":n},e),children:i.map(({value:e,label:n,attributes:s})=>(0,b.jsx)("li",{role:"tab",tabIndex:r===e?0:-1,"aria-selected":r===e,ref:e=>{o.push(e)},onKeyDown:c,onClick:l,...s,className:(0,t.A)("tabs__item",g.tabItem,s?.className,{"tabs__item--active":r===e}),children:n??e},e))})}function v({lazy:e,children:n,selectedValue:r}){const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=a.find(e=>e.props.value===r);return e?(0,s.cloneElement)(e,{className:(0,t.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:a.map((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==r}))})}function j(e){const n=f(e);return(0,b.jsxs)("div",{className:(0,t.A)("tabs-container",g.tabList),children:[(0,b.jsx)(_,{...n,...e}),(0,b.jsx)(v,{...n,...e})]})}function S(e){const n=(0,x.A)();return(0,b.jsx)(j,{...e,children:u(e.children)},String(n))}},14963:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/image-125-7c0b00df38ceac4a7cff4d470bca3cbd.jpg"},19365:(e,n,r)=>{r.d(n,{A:()=>i});r(96540);var s=r(34164);const t={tabItem:"tabItem_Ymn6"};var a=r(74848);function i({children:e,hidden:n,className:r}){return(0,a.jsx)("div",{role:"tabpanel",className:(0,s.A)(t.tabItem,r),hidden:n,children:e})}},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>o});var s=r(96540);const t={},a=s.createContext(t);function i(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(a.Provider,{value:n},e.children)}},55859:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>d,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"Document Home/peripherals-and-interfaces/usb","title":"USB","description":"The Universal Serial Bus (USB) is an industry standard that allows for data exchange and power supply between various types of electronic devices. It supports multiple operating speeds, such as 1.5 Mbps low speed, 12 Mbps full speed, 480 Mbps high speed, as well as 5 Gbps SuperSpeed and 10 Gbps SuperSpeed Plus.","source":"@site/docs/Document Home/2.peripherals-and-interfaces/2.usb.md","sourceDirName":"Document Home/2.peripherals-and-interfaces","slug":"/Document Home/peripherals-and-interfaces/usb","permalink":"/rubikpi-ubuntu-user-manual-test-en.github.io/docs/Document Home/peripherals-and-interfaces/usb","draft":false,"unlisted":false,"editUrl":"https://github.com/hongyang-rp/rubikpi-ubuntu-user-manual-test-en.github.io/tree/main/docs/Document Home/2.peripherals-and-interfaces/2.usb.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Peripherals and Interfaces","permalink":"/rubikpi-ubuntu-user-manual-test-en.github.io/docs/Document Home/peripherals-and-interfaces/"},"next":{"title":"Camera Serial Interface (CSI)","permalink":"/rubikpi-ubuntu-user-manual-test-en.github.io/docs/Document Home/peripherals-and-interfaces/csi"}}');var t=r(74848),a=r(28453),i=r(11470),o=r(19365);const d={},l="USB",c={},u=[{value:"Verify USB functions",id:"verify-usb-functions",level:2},{value:"USB debugging",id:"usb-debugging",level:2},{value:"USB tracing",id:"usb-tracing",level:3},{value:"USB regdump",id:"usb-regdump",level:3},{value:"Host mode sysfs lookup",id:"host-mode-sysfs-lookup",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"usb",children:"USB"})}),"\n",(0,t.jsx)(n.p,{children:"The Universal Serial Bus (USB) is an industry standard that allows for data exchange and power supply between various types of electronic devices. It supports multiple operating speeds, such as 1.5 Mbps low speed, 12 Mbps full speed, 480 Mbps high speed, as well as 5 Gbps SuperSpeed and 10 Gbps SuperSpeed Plus."}),"\n",(0,t.jsx)(n.p,{children:"RUBIK Pi 3 provides four USB ports:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"2 x USB 3.0 Type-A, host mode only (No.7 in the following figure)"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"1 x USB 2.0 Type-A, host or device mode (No. 6 in the following figure)"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"1 x USB 3.1 Gen 1 Type-C, host or device mode (ADB), Type-C with DisplayPort v1.4 (No. 5 in the following figure)"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:r(14963).A+"",width:"924",height:"730"})}),"\n",(0,t.jsx)(n.h2,{id:"verify-usb-functions",children:"Verify USB functions"}),"\n",(0,t.jsxs)(i.A,{children:[(0,t.jsxs)(o.A,{value:"USB CAM",label:"USB camera",children:[(0,t.jsxs)(n.p,{children:["RUBIK Pi 3 device provides driver support for USB webcams that are compliant with the USB Video Class (UVC) standard. The uvcvideo driver in the Linux kernel supports these cameras. For more information on the uvcvideo driver, refer to ",(0,t.jsx)(n.a,{href:"https://www.kernel.org/doc/html/v4.19/media/v4l-drivers/uvcvideo.html",children:"https://www.kernel.org/doc/html/v4.19/media/v4l-drivers/uvcvideo.html"}),"."]}),(0,t.jsxs)(n.p,{children:["The uvcvideo driver exposes these cameras as V4L2 video devices, which can be accessed through character device nodes (such as ",(0,t.jsx)(n.em,{children:"/dev/videoX"}),")."]}),(0,t.jsx)(n.p,{children:"In user space, applications can use the v4l2src GStreamer plugin to manage the USB cameras. The plugin is associated with the Qualcomm Intelligent Multimedia SDK (QIM SDK). Additionally, programs like Yavta (another V4L2 test application) can directly interact with the V4L2 (Video4Linux2) interface to test and control the camera devices."}),(0,t.jsx)(n.p,{children:"Install Yavta"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"sudo apt install yavta\n"})}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Prerequisite: Obtain the image format and size"})}),(0,t.jsx)(n.p,{children:"To configure the USB camera using Yavta or GStreamer, perform the following steps."}),(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"To understand the enumeration details, connect the USB camera and run the following command."}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"lsusb\n"})}),(0,t.jsx)(n.p,{children:"The output is as follows:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\r\nBus 001 Device 003: ID 1bcf:0215 Sunplus Innovation Technology Inc. 4K AutoFocus Webcam\r\nBus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub\r\nBus 002 Device 002: ID 0b95:1790 ASIX Electronics Corp. AX88179 Gigabit Ethernet\r\nBus 003 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\n"})}),(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Before and after connecting the USB camera, run the following command in the RUBIK Pi 3 terminal. The difference between the two results can be used to identify the video node of the USB camera."}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"ls /dev/video*\n"})}),(0,t.jsx)(n.p,{children:"Sample output:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"root@rubikpi:/sys/bus/pci# ls /dev/video*\r\n/dev/video0  /dev/video1  /dev/video32  /dev/video33\r\nroot@rubikpi:/sys/bus/pci# ls /dev/video*\r\n/dev/video0  /dev/video1  /dev/video2  /dev/video3  /dev/video32  /dev/video33\n"})}),(0,t.jsxs)(n.p,{children:["As shown above, the video nodes for the USB camera are ",(0,t.jsx)(n.em,{children:"video2"})," and ",(0,t.jsx)(n.em,{children:"video3"}),"."]}),(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"To use Yavta to view the supported output formats and sizes, run the following command:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"yavta /dev/video2 --enum-formats\n"})}),(0,t.jsx)(n.p,{children:"The output is as follows:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Device /dev/video3 opened.\r\nDevice `4K AutoFocus Webcam: 4K AutoFoc' on `usb-0000:01:00.0-1' (driver 'uvcvideo') supports meta-d.\r\n- Available formats:\r\n        Format 0: UVCH (48435655)\r\n        Type: Meta-data capture (13)\r\n        Name: UVC Payload Header Metadata\r\n\r\nMeta-data format: UVCH (48435655) buffer size 10240\r\nubuntu@rubikpi:~$ yavta /dev/video2 --enum-formats\r\nDevice /dev/video2 opened.\r\nDevice `4K AutoFocus Webcam: 4K AutoFoc' on `usb-0000:01:00.0-1' (driver 'uvcvideo') supports video,.\r\n- Available formats:\r\n        Format 0: MJPEG (47504a4d)\r\n        Type: Video capture (1)\r\n        Name: Motion-JPEG\r\n        Frame size: 1920x1080 (1/30, 1/30)\r\n        Frame size: 1280x720 (1/30)\r\n        Frame size: 1600x900 (1/30)\r\n        Frame size: 2304x1296 (1/30)\r\n        Frame size: 2560x1440 (1/30)\r\n        Frame size: 2688x1512 (1/30)\r\n        Frame size: 3840x2160 (1/25)\r\n        Frame size: 640x360 (1/30)\r\n        Frame size: 800x450 (1/30)\r\n        Frame size: 848x480 (1/30)\r\n        Frame size: 960x540 (1/30)\r\n        Frame size: 1024x576 (1/30)\r\n        Frame size: 640x480 (1/30)\r\n        Frame size: 800x600 (1/30)\r\n        Frame size: 960x720 (1/30)\r\n        Frame size: 1024x768 (1/30)\r\n        Frame size: 1280x960 (1/30)\r\n        Frame size: 1600x1200 (1/30)\r\n        Frame size: 2048x1536 (1/30)\r\n        Frame size: 2592x1944 (1/30)\r\n        Frame size: 1920x1080 (1/30, 1/30)\r\n\r\n        Format 1: YUYV (56595559)\r\n        Type: Video capture (1)\r\n        Name: YUYV 4:2:2\r\n        Frame size: 1920x1080 (1/5, 1/5)\r\n        Frame size: 1280x720 (1/10)\r\n        Frame size: 1600x900 (1/5)\r\n        Frame size: 640x360 (1/30)\r\n        Frame size: 800x450 (1/20)\r\n        Frame size: 848x480 (1/20)\r\n        Frame size: 960x540 (1/20)\r\n        Frame size: 1024x576 (1/15)\r\n        Frame size: 640x480 (1/30)\r\n        Frame size: 800x600 (1/20)\r\n        Frame size: 960x720 (1/15)\r\n        Frame size: 1024x768 (1/10)\r\n        Frame size: 1280x960 (2/15)\r\n        Frame size: 1600x1200 (1/5)\r\n        Frame size: 1920x1080 (1/5, 1/5)\r\n\r\nVideo format: MJPEG (47504a4d) 1920x1080 (stride 0) field none buffer size 4147200\n"})}),(0,t.jsxs)(n.ol,{start:"4",children:["\n",(0,t.jsx)(n.li,{children:"From the display results of step 3, select the desired image format and size."}),"\n"]}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Configure the USB camera using Yavta"})}),(0,t.jsx)(n.p,{children:"Prerequisite: The USB camera's output format and size have been determined."}),(0,t.jsxs)(n.p,{children:["Run the following command to select the 1920x1080 output size and 30 fps MJPEG format, and capture 10 frames to ",(0,t.jsx)(n.em,{children:"/tmp/"})," with file names in the format testmjpeg-00000*.bin:"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"yavta -f MJPEG -s 1920x1080 -t 1/30 -c10 -F/tmp/testmjpeg /dev/video2\n"})}),(0,t.jsx)(n.p,{children:"The output is as follows:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Device /dev/video2 opened.\r\nDevice `4K AutoFocus Webcam: 4K AutoFoc' on `usb-0000:01:00.0-1' (driver 'uvcvideo') supports video, capture, without mplanes.\r\nVideo format set: MJPEG (47504a4d) 1920x1080 (stride 0) field none buffer size 4147200\r\nVideo format: MJPEG (47504a4d) 1920x1080 (stride 0) field none buffer size 4147200\r\nCurrent frame rate: 1/30\r\nSetting frame rate to: 1/30\r\nFrame rate set: 1/30\r\n8 buffers requested.\r\nlength: 4147200 offset: 0 timestamp type/source: mono/SoE\r\nBuffer 0/0 mapped at address 0xffffa5e5b000.\r\nlength: 4147200 offset: 32768 timestamp type/source: mono/SoE\r\nBuffer 1/0 mapped at address 0xffffa5a66000.\r\nlength: 4147200 offset: 65536 timestamp type/source: mono/SoE\r\nBuffer 2/0 mapped at address 0xffffa5671000.\r\nlength: 4147200 offset: 98304 timestamp type/source: mono/SoE\r\nBuffer 3/0 mapped at address 0xffffa527c000.\r\nlength: 4147200 offset: 131072 timestamp type/source: mono/SoE\r\nBuffer 4/0 mapped at address 0xffffa4e87000.\r\nlength: 4147200 offset: 163840 timestamp type/source: mono/SoE\r\nBuffer 5/0 mapped at address 0xffffa4a92000.\r\nlength: 4147200 offset: 196608 timestamp type/source: mono/SoE\r\nBuffer 6/0 mapped at address 0xffffa469d000.\r\nlength: 4147200 offset: 229376 timestamp type/source: mono/SoE\r\nBuffer 7/0 mapped at address 0xffffa42a8000.\r\n0 (0) [-] none 0 115283 B 53.095060 53.647782 244.260 fps ts mono/SoE\r\n1 (1) [-] none 1 115277 B 53.647091 53.679768 1.811 fps ts mono/SoE\r\n2 (2) [-] none 2 115376 B 53.683085 53.715810 27.782 fps ts mono/SoE\r\n3 (3) [-] none 3 115545 B 53.715105 53.747738 31.230 fps ts mono/SoE\r\n4 (4) [-] none 4 117998 B 53.747096 53.783769 31.259 fps ts mono/SoE\r\n5 (5) [-] none 5 117962 B 53.783089 53.815715 27.783 fps ts mono/SoE\r\n6 (6) [-] none 6 118127 B 53.815088 53.847740 31.251 fps ts mono/SoE\r\n7 (7) [-] none 7 118027 B 53.847099 53.883764 31.239 fps ts mono/SoE\r\n8 (0) [-] none 8 119080 B 53.883084 53.915721 27.789 fps ts mono/SoE\r\n9 (1) [-] none 9 119399 B 53.915093 53.947736 31.241 fps ts mono/SoE\r\nCaptured 10 frames in 0.856770 seconds (11.671741 fps, 1368014.420968 B/s).\r\n8 buffers released.\r\n\n"})}),(0,t.jsxs)(n.p,{children:["Run the following command to select the 1280x960 output size, 15 fps YUV format, and capture 10 frames to ",(0,t.jsx)(n.em,{children:"/tmp/"})," with file names in the format testyuv-00000*.bin"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"yavta -f YUYV -s 1280x720 -t 1/15 -c10 -F/tmp/testyuv /dev/video2\n"})}),(0,t.jsx)(n.p,{children:"The output is as follows:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Device /dev/video2 opened.\r\nDevice `4K AutoFocus Webcam: 4K AutoFoc' on `usb-0000:01:00.0-1' (driver 'uvcvideo') supports video,.\r\nVideo format set: YUYV (56595559) 1280x720 (stride 2560) field none buffer size 1843200\r\nVideo format: YUYV (56595559) 1280x720 (stride 2560) field none buffer size 1843200\r\nCurrent frame rate: 1/10\r\nSetting frame rate to: 1/15\r\nFrame rate set: 1/10\r\n8 buffers requested.\r\nlength: 1843200 offset: 0 timestamp type/source: mono/SoE\r\nBuffer 0/0 mapped at address 0xffff966ce000.\r\nlength: 1843200 offset: 32768 timestamp type/source: mono/SoE\r\nBuffer 1/0 mapped at address 0xffff9650c000.\r\nlength: 1843200 offset: 65536 timestamp type/source: mono/SoE\r\nBuffer 2/0 mapped at address 0xffff9634a000.\r\nlength: 1843200 offset: 98304 timestamp type/source: mono/SoE\r\nBuffer 3/0 mapped at address 0xffff96188000.\r\nlength: 1843200 offset: 131072 timestamp type/source: mono/SoE\r\nBuffer 4/0 mapped at address 0xffff95fc6000.\r\nlength: 1843200 offset: 163840 timestamp type/source: mono/SoE\r\nBuffer 5/0 mapped at address 0xffff95e04000.\r\nlength: 1843200 offset: 196608 timestamp type/source: mono/SoE\r\nBuffer 6/0 mapped at address 0xffff95c42000.\r\nlength: 1843200 offset: 229376 timestamp type/source: mono/SoE\r\nBuffer 7/0 mapped at address 0xffff95a80000.\r\n0 (0) [-] none 0 1843200 B 364.737849 364.966754 2.174 fps ts mono/SoE\r\n1 (1) [-] none 1 1843200 B 364.966042 365.066785 4.382 fps ts mono/SoE\r\n2 (2) [-] none 2 1843200 B 365.066087 365.166812 9.996 fps ts mono/SoE\r\n3 (3) [-] none 3 1843200 B 365.166149 365.266862 9.994 fps ts mono/SoE\r\n4 (4) [-] none 4 1843200 B 365.266205 365.366929 9.994 fps ts mono/SoE\r\n5 (5) [-] none 5 1843200 B 365.366266 365.466985 9.994 fps ts mono/SoE\r\n6 (6) [-] none 6 1843200 B 365.466326 365.567108 9.994 fps ts mono/SoE\r\n7 (7) [-] none 7 1843200 B 365.566381 365.667099 9.995 fps ts mono/SoE\r\n8 (0) [-] none 8 1843200 B 365.666440 365.767150 9.994 fps ts mono/SoE\r\n9 (1) [-] none 9 1843200 B 365.766496 365.867212 9.994 fps ts mono/SoE\r\nCaptured 10 frames in 1.589346 seconds (6.291895 fps, 11597220.863435 B/s).\r\n8 buffers released.\n"})}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Configure the USB camera using the GStreamer in the Qualcomm IM SDK"})}),(0,t.jsxs)(n.p,{children:["The Qualcomm IM SDK uses the open-source multimedia framework ",(0,t.jsx)(n.a,{href:"https://gstreamer.freedesktop.org/",children:"GStreamer"}),", which provides a concise API and easy-to-use plugins for multimedia and machine learning. For information on installing the Qualcomm IM SDK, refer to the ",(0,t.jsx)(n.a,{href:"/rubikpi-ubuntu-user-manual-test-en.github.io/docs/Document%20Home/run-sample-applications#runmediaapp",children:"Quick Start"})," section."]}),(0,t.jsx)(n.p,{children:"The Qualcomm IM SDK includes the v4l2src plugin, which allows input from the USB camera in the selected format. The waylandsink plugin is responsible for rendering the video output on the Wayland display interface."}),(0,t.jsx)(n.p,{children:"Prerequisite: The USB camera's output format and size have been determined."}),(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"To set the environment variable for the Wayland display interface, run the following command in the RUBIK Pi 3 terminal:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"export XDG_RUNTIME_DIR=/dev/socket/weston && export WAYLAND_DISPLAY=wayland-1\n"})}),(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsxs)(n.li,{children:["Use the GStreamer command to stream the video captured by the camera to the UI. Ensure that the appropriate device ID (",(0,t.jsx)(n.em,{children:"/dev/videoX"}),") is set, and select the correct format based on the detected USB camera."]}),"\n"]}),(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["In GStreamer, the YUYV color format is referred to as YUY2. Therefore, you must specify the YUYV format when setting up the pipeline and use ",(0,t.jsx)(n.strong,{children:"YUY2"})," in the caps filter."]})}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"For 720p, run the following command:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'gst-launch-1.0 -e v4l2src io-mode=dmabuf-import device="/dev/video0" ! video/x-raw,format=YUY2,width=1280,height=720,framerate=10/1 ! waylandsink fullscreen=true\n'})}),(0,t.jsx)(n.p,{children:"The output is as follows:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Y2,width=1280,height=720,framerate=10/1 ! waylandsink fullscreen=true\r\nSetting pipeline to PAUSED ...\r\nI/Adreno-UNKNOWN (1985,1985): <ReadGpuID:357>: Reading chip ID through GSL\r\nGBM_INFO::msmgbm_mapper(262)::gbm mapper instantiated\r\ngbm_create_device(224): Info: backend name is: msm_drm\r\nPipeline is live and does not need PREROLL ...\r\nPipeline is PREROLLED ...\r\nSetting pipeline to PLAYING ...\r\nNew clock: GstSystemClock\r\ngbm_create_device(224): Info: backend name is: msm_drm\r\nGBM_ERR::msmgbm_bo_create(870)::DRM_IOCTL_PRIME_FD_TO_HANDLE failed for data fd errono: 22 (Invalid argument) drm fd: 24 data fd: 26\r\n GBM_ERR::msmgbm_bo_create(923)::DRM_IOCTL_PRIME_FD_TO_HANDLE failed for metadata fd errono: 22 (Invalid argument) drm fd: 24 metadata fd: 27\r\nGBM_ERR::msmgbm_bo_create(870)::DRM_IOCTL_PRIME_FD_TO_HANDLE failed for data fd errono: 22 (Invalid argument) drm fd: 24 data fd: 29\r\nGBM_ERR::msmgbm_bo_create(923)::DRM_IOCTL_PRIME_FD_TO_HANDLE failed for metadata fd errono: 22 (Invalid argument) drm fd: 24 metadata fd: 30\r\nGBM_ERR::msmgbm_bo_create(870)::DRM_IOCTL_PRIME_FD_TO_HANDLE failed for data fd errono: 22 (Invalid argument) drm fd: 24 data fd: 32\r\nGBM_ERR::msmgbm_bo_create(923)::DRM_IOCTL_PRIME_FD_TO_HANDLE failed for metadata fd errono: 22 (Invalid argument) drm fd: 24 metadata fd: 33\r\nGBM_ERR::msmgbm_bo_create(870)::DRM_IOCTL_PRIME_FD_TO_HANDLE failed for data fd errono: 22 (Invalid argument) drm fd: 24 data fd: 35\r\nGBM_ERR::msmgbm_bo_create(923)::DRM_IOCTL_PRIME_FD_TO_HANDLE failed for metadata fd errono: 22 (Invalid argument) drm fd: 24 metadata fd: 36\r\nRedistribute latency...\r\n0:00:47.7 / 99:99:99.\n"})}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"For 1080p, run the following command:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'gst-launch-1.0 -e v4l2src io-mode=dmabuf-import device="/dev/video0" ! video/x-raw,format=YUY2,width=1920,height=1080,framerate=5/1 ! waylandsink fullscreen=true\n'})})]}),(0,t.jsxs)(o.A,{value:"USB Custom",label:"Custom USB device",children:[(0,t.jsx)(n.p,{children:"On RUBIK Pi 3, only the USB 2.0 Type-A port and USB 3.1 Type-C port support the custom USB device (device mode). The following example uses the USB 3.1 Type-C port as an example."}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example shell script for a USB composite device with diag and ADB interfaces"})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'cd /sys/kernel/config/usb_gadget/adb\r\necho on > /sys/bus/platform/devices/a600000.usb/power/control\r\necho "" > UDC\r\nmkdir functions/ffs.diag\r\necho "QCOM" > strings/0x409/manufacturer\r\necho 0x05c6 > idVendor\r\necho 0x901d > idProduct\r\necho "Diag_ADB" > configs/c.1/strings/0x409/configuration\r\n\r\nif [ ! -d /dev/ffs-diag ]; then\r\nmkdir -p /dev/ffs-diag\r\nfi\r\nif [ ! -e /dev/ffs-diag/ep0 ]; then\r\nmount -o uid=2000,gid=2000 -t functionfs diag /dev/ffs-diag\r\nfi\r\n\r\n/usr/bin/diag-router &\r\n\r\ncd configs/c.1\r\nrm -r ffs.usb0\r\nln -s ../../functions/ffs.diag f1\r\nln -s ../../functions/ffs.usb0 f2\r\ncd ../../ udcname=`ls -1 /sys/class/udc | head -n 1`\r\necho $udcname > UDC\r\necho auto > /sys/bus/platform/devices/a600000.usb/power/control\n'})}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Simulate as a USB flash drive"})}),(0,t.jsx)(n.p,{children:"Run the following commands on RUBIK Pi 3 to simulate it as a 2 GB USB flash drive."}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'sudo -i\r\ncd /sys/kernel/config/usb_gadget/  #Log in from the serial port or open the PC terminal and run the following commands\r\nmkdir g1\r\ncd g1\r\nmkdir functions/mass_storage.0\r\ndd if=/dev/zero of=/tmp/test.iso bs=1M count=2048  #Create a 2 GB USB drive space\r\nmkfs.ext4 /tmp/test.iso\r\necho "/tmp/test.iso" > functions/mass_storage.0/lun.0/file\r\nmkdir configs/c.1\r\nln -s functions/mass_storage.0/ configs/c.1/f3\r\nmount -t debugfs none /sys/kernel/debug/\r\n\r\necho device > /sys/kernel/debug/usb/8c00000.usb/qcom_usb2_0_mode  #Switch USB to device mode\r\necho 8c00000.usb > UDC #Connect the USB cable. The USB drive is identified and can be written to and read from\r\n\r\necho host > /sys/kernel/debug/usb/8c00000.usb/qcom_usb2_0_mode  #Remove the USB cable and switch to host mode\n'})})]})]}),"\n",(0,t.jsx)(n.h2,{id:"usb-debugging",children:"USB debugging"}),"\n",(0,t.jsx)(n.p,{children:"This section provides the methods for obtaining debug logs. The debug methods include regdumps, debug ftraces, and configfs nodes. When debugging issues related to entering or exiting low-power modes, system memory management unit (SMMU), and unclocked accesses, you can check the event and controller status details through the logs obtained by using the above methods."}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsx)(n.p,{children:"The following commands require the root privilege."}),(0,t.jsxs)(n.p,{children:["Run the ",(0,t.jsx)(n.code,{children:"sudo passwd root"})," command and modify the root user password as prompted. Run the ",(0,t.jsx)(n.code,{children:"su root"})," command to switch to the root user."]})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["USB 2.0 Type-A device path: ",(0,t.jsxs)(n.em,{children:[" /sys/devices/platform/soc@0/",(0,t.jsx)(n.strong,{children:"8c00000"}),".usb/xhci-hcd.1.auto/usb3/"]})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"USB 3.0 Type-A device path:"}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.em,{children:["/sys/devices/platform/soc@0/",(0,t.jsx)(n.strong,{children:"1c00000"}),".pci/pci0000:00/0000:00:00.0/0000:",(0,t.jsx)(n.strong,{children:"01:00.0"}),"/usb1"]})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.em,{children:["/sys/devices/platform/soc@0/",(0,t.jsx)(n.strong,{children:"1c00000"}),".pci/pci0000:00/0000:00:00.0/0000:",(0,t.jsx)(n.strong,{children:"01:00.0"}),"/usb2"]})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["USB 3.1 Type-C device path: ",(0,t.jsxs)(n.em,{children:["/sys/devices/platform/soc@0/",(0,t.jsx)(n.strong,{children:"a600000"}),".usb"]})," "]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"usb-tracing",children:"USB tracing"}),"\n",(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.code,{children:"debugfs"})," to deeply trace each transaction over the USB line. To view the trace list, run the following command."]}),"\n",(0,t.jsxs)(n.admonition,{type:"warning",children:[(0,t.jsxs)(n.p,{children:["Before running the command, ensure that ",(0,t.jsx)(n.code,{children:"debugfs"})," has been mounted. If not mounted, run the following command to mount ",(0,t.jsx)(n.code,{children:"debugfs"}),":"]}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"mount -t debugfs none /sys/kernel/debug"})})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"ls /sys/kernel/debug/tracing/events/dwc3\n"})}),"\n",(0,t.jsx)(n.p,{children:"The following traces can be used to verify data transmission in the xHCI, gadget stack, or USB Type-C Connector System Software Interface (UCSI)."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"dwc3_alloc_request  dwc3_event              dwc3_gadget_generic_cmd  enable\r\ndwc3_complete_trb   dwc3_free_request       dwc3_gadget_giveback     filter\r\ndwc3_ctrl_req       dwc3_gadget_ep_cmd      dwc3_prepare_trb\r\ndwc3_ep_dequeue     dwc3_gadget_ep_disable  dwc3_readl\r\ndwc3_ep_queue       dwc3_gadget_ep_enable   dwc3_writel\n"})}),"\n",(0,t.jsx)(n.p,{children:"To list the traces in the xHCI/Host Controller Driver (HCD), run the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"ls /sys/kernel/debug/tracing/events/xhci-hcd\n"})}),"\n",(0,t.jsx)(n.p,{children:"The following traces can be used to verify data transmission in the xHCI/HCD."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"enable                            xhci_handle_cmd_config_ep\r\nfilter                            xhci_handle_cmd_disable_slot\r\n  xhci_add_endpoint                 xhci_handle_cmd_reset_dev\r\n  xhci_address_ctrl_ctx             xhci_handle_cmd_reset_ep\r\n  xhci_address_ctx                  xhci_handle_cmd_set_deq\r\n  xhci_alloc_dev                    xhci_handle_cmd_set_deq_ep\r\n  xhci_alloc_virt_device            xhci_handle_cmd_stop_ep\r\n  xhci_configure_endpoint           xhci_handle_command\r\n  xhci_configure_endpoint_ctrl_ctx  xhci_handle_event\r\n  xhci_dbc_alloc_request            xhci_handle_port_status\r\n  xhci_dbc_free_request             xhci_handle_transfer\r\n  xhci_dbc_gadget_ep_queue          xhci_hub_status_data\r\n  xhci_dbc_giveback_request         xhci_inc_deq\r\n  xhci_dbc_handle_event             xhci_inc_enq\r\n  xhci_dbc_handle_transfer          xhci_queue_trb\r\n  xhci_dbc_queue_request            xhci_ring_alloc\r\n  xhci_dbg_address                  xhci_ring_ep_doorbell\r\n  xhci_dbg_cancel_urb               xhci_ring_expansion\r\n  xhci_dbg_context_change           xhci_ring_free\r\n  xhci_dbg_init                     xhci_ring_host_doorbell\r\n  xhci_dbg_quirks                   xhci_setup_addressable_virt_device\r\n  xhci_dbg_reset_ep                 xhci_setup_device\r\n  xhci_dbg_ring_expansion           xhci_setup_device_slot\r\n  xhci_discover_or_reset_device     xhci_stop_device\r\n  xhci_free_dev                     xhci_urb_dequeue\r\n  xhci_free_virt_device             xhci_urb_enqueue\r\n  xhci_get_port_status              xhci_urb_giveback\r\n  xhci_handle_cmd_addr_dev\n"})}),"\n",(0,t.jsx)(n.p,{children:"To list the available events for the USB Video Class (UVC) gadget driver, run the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"ls /sys/kernel/debug/tracing/events/gadget\n"})}),"\n",(0,t.jsx)(n.p,{children:"The output is as follows."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"enable                      usb_gadget_activate\r\n  filter                      usb_gadget_clear_selfpowered\r\n  usb_ep_alloc_request        usb_gadget_connect\r\n  usb_ep_clear_halt           usb_gadget_deactivate\r\n  usb_ep_dequeue              usb_gadget_disconnect\r\n  usb_ep_disable              usb_gadget_frame_number\r\n  usb_ep_enable               usb_gadget_giveback_request\r\n  usb_ep_fifo_flush           usb_gadget_set_remote_wakeup\r\n  usb_ep_fifo_status          usb_gadget_set_selfpowered\r\n  usb_ep_free_request         usb_gadget_vbus_connect\r\n  usb_ep_queue                usb_gadget_vbus_disconnect\r\n  usb_ep_set_halt             usb_gadget_vbus_draw\r\n  usb_ep_set_maxpacket_limit  usb_gadget_wakeup\r\n  usb_ep_set_wedge\n"})}),"\n",(0,t.jsx)(n.p,{children:"To list the available events in the UCSI driver, run the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"ls /sys/kernel/debug/tracing/events/ucsi\n"})}),"\n",(0,t.jsx)(n.p,{children:"The output is as follows."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"enable  ucsi_connector_change  ucsi_register_port  ucsi_run_command\r\nfilter  ucsi_register_altmode  ucsi_reset_ppm\n"})}),"\n",(0,t.jsx)(n.h3,{id:"usb-regdump",children:"USB regdump"}),"\n",(0,t.jsxs)(n.p,{children:["The USB ",(0,t.jsx)(n.code,{children:"debugfs"})," provides the following information (using the Type-C interface as an example)."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Operating mode"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"cat /sys/kernel/debug/usb/a600000.usb/mode # Type-C interface\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["Operating mode of USB 2.0 Type-A ",(0,t.jsx)(n.code,{children:"cat /sys/kernel/debug/usb/8c00000.usb/qcom_usb2_0_mode"})]})}),"\n",(0,t.jsx)(n.p,{children:"Sample output:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"device\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"State and transfer ring buffer (TRB) queues to all endpoints in device mode."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Current link status."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"cat /sys/kernel/debug/usb/a600000.usb/link_state\n"})}),"\n",(0,t.jsx)(n.p,{children:"Sample output:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"Sleep\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Display processor (LSP) dump"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"cat /sys/kernel/debug/usb/a600000.usb/lsp_dump\n"})}),"\n",(0,t.jsx)(n.p,{children:"Sample output:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"GDBGLSP[0] = 0x40000000\r\nGDBGLSP[1] = 0x00003a80\r\nGDBGLSP[2] = 0x38200000\r\nGDBGLSP[3] = 0x00802000\r\nGDBGLSP[4] = 0x126f1000\r\nGDBGLSP[5] = 0x3a800018\r\nGDBGLSP[6] = 0x00000a80\r\nGDBGLSP[7] = 0xfc03f14a\r\nGDBGLSP[8] = 0x0b803fff\r\nGDBGLSP[9] = 0x00000000\r\nGDBGLSP[10] = 0x000000f8\r\nGDBGLSP[11] = 0x000000f8\r\nGDBGLSP[12] = 0x000000f8\r\nGDBGLSP[13] = 0x000000f8\r\nGDBGLSP[14] = 0x000000f8\r\nGDBGLSP[15] = 0x000000f8\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"ls /sys/kernel/debug/usb/a600000.usb\n"})}),"\n",(0,t.jsx)(n.p,{children:"Sample output:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"ep0in    ep11out  ep14in   ep1out  ep4in   ep6out  ep9in       regdump\r\nep0out   ep12in   ep14out  ep2in   ep4out  ep7in   ep9out      testmode\r\nep10in   ep12out  ep15in   ep2out  ep5in   ep7out  link_state\r\nep10out  ep13in   ep15out  ep3in   ep5out  ep8in   lsp_dump\r\nep11in   ep13out  ep1in    ep3out  ep6in   ep8out  mode\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Run the ",(0,t.jsx)(n.code,{children:"regdump"})," command to obtain the current status of the register space for the following registers:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Device mode registers, such as DCTL, DSTS, and DCFG"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Global registers, such as GCTL and GSTS"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"cd /sys/kernel/debug/usb/a600000.usb\r\ncat regdump\n"})}),"\n",(0,t.jsx)(n.p,{children:"Sample output:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"GSBUSCFG0 = 0x2222000e\r\nGSBUSCFG1 = 0x00001700\r\nGTXTHRCFG = 0x00000000\r\nGRXTHRCFG = 0x00000000\r\nGCTL = 0x00102000\r\nGEVTEN = 0x00000000\r\nGSTS = 0x7e800000\r\nGUCTL1 = 0x810c1802\r\nGSNPSID = 0x5533330a\r\nGGPIO = 0x00000000\r\nGUID = 0x00060500\r\nGUCTL = 0x0d00c010\r\nGBUSERRADDR0 = 0x00000000\r\nGBUSERRADDR1 = 0x00000000\r\nGPRTBIMAP0 = 0x00000000\r\nGPRTBIMAP1 = 0x00000000\r\nGHWPARAMS0 = 0x4020400a\r\nGDBGFIFOSPACE = 0x00420000\r\nGDBGLTSSM = 0x41090658\r\nGDBGBMU = 0x20300000\r\nGPRTBIMAP_HS0 = 0x00000000\r\nGPRTBIMAP_HS1 = 0x00000000\r\nGPRTBIMAP_FS0 = 0x00000000\r\nGPRTBIMAP_FS1 = 0x00000000\r\nGUCTL2 = 0x0198440d\r\nVER_NUMBER = 0x00000000\r\nVER_TYPE = 0x00000000\r\nGUSB2PHYCFG(0) = 0x00002400\r\nGUSB2I2CCTL(0) = 0x00000000\r\nGUSB2PHYACC(0) = 0x00000000\r\nGUSB3PIPECTL(0) = 0x030e0002\r\nGTXFIFOSIZ(0) = 0x00000042\r\nGRXFIFOSIZ(0) = 0x00000305\r\nGEVNTADRLO(0) = 0xfffff000\r\nGEVNTADRHI(0) = 0x0000000f\r\nGEVNTSIZ(0) = 0x00001000\r\nGEVNTCOUNT(0) = 0x00000000\r\nGHWPARAMS8 = 0x000007ea\r\nGUCTL3 = 0x00010000\r\nGFLADJ = 0x8c80c8a0\r\nDCFG = 0x00cc08b4\r\nDCTL = 0x8cf00a00\r\nDEVTEN = 0x00000257\r\nDSTS = 0x008a5200\r\nDGCMDPAR = 0x00000000\r\nDGCMD = 0x00000000\r\nDALEPENA = 0x0000000f\r\nDEPCMDPAR2(0) = 0x00000000\r\nDEPCMDPAR1(0) = 0xffffe000\r\nDEPCMDPAR0(0) = 0x0000000f\r\nDEPCMD(0) = 0x00000006\r\nOCFG = 0x00000000\r\nOCTL = 0x00000000\r\nOEVT = 0x00000000\r\nOEVTEN = 0x00000000\r\nOSTS = 0x00000000\n"})}),"\n",(0,t.jsx)(n.h3,{id:"host-mode-sysfs-lookup",children:"Host mode sysfs lookup"}),"\n",(0,t.jsx)(n.p,{children:"To view the bus detailed information, run the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"lsusb\n"})}),"\n",(0,t.jsx)(n.p,{children:"Sample output:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"Bus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub\r\nBus 001 Device 002: ID 03f0:134a HP, Inc Optical Mouse\r\nBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\n"})}),"\n",(0,t.jsx)(n.p,{children:"To view the contents of the current directory, run the following commands:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"cd /sys/bus/usb/devices/\r\nls\n"})}),"\n",(0,t.jsx)(n.p,{children:"Sample output:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"1-0:1.0  1-1  1-1:1.0  2-0:1.0  usb1  usb2\n"})}),"\n",(0,t.jsx)(n.p,{children:"To view detailed information about USB devices, run the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"cat /sys/kernel/debug/usb/devices\n"})}),"\n",(0,t.jsx)(n.p,{children:"Sample output:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"T:  Bus=01 Lev=00 Prnt=00 Port=00 Cnt=00 Dev#=  1 Spd=480  MxCh= 1\r\nB:  Alloc=  0/800 us ( 0%), #Int=  0, #Iso=  0\r\nD:  Ver= 2.00 Cls=09(hub  ) Sub=00 Prot=01 MxPS=64 #Cfgs=  1\r\nP:  Vendor=1d6b ProdID=0002 Rev= 6.05\r\nS:  Manufacturer=Linux 6.5.0-rc4 xhci-hcd\r\nS:  Product=xHCI Host Controller\r\nS:  SerialNumber=xhci-hcd.0.auto\r\nC:* #Ifs= 1 Cfg#= 1 Atr=e0 MxPwr=  0mA\r\nI:* If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=00 Driver=hub\r\nE:  Ad=81(I) Atr=03(Int.) MxPS=   4 Ivl=256ms\r\n\r\nT:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  2 Spd=1.5  MxCh= 0\r\nD:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS= 8 #Cfgs=  1\r\nP:  Vendor=03f0 ProdID=134a Rev= 1.00\r\nS:  Manufacturer=PixArt\r\nS:  Product=HP USB Optical Mouse\r\nC:* #Ifs= 1 Cfg#= 1 Atr=a0 MxPwr=100mA\r\nI:* If#= 0 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=01 Prot=02 Driver=usbhid\r\nE:  Ad=81(I) Atr=03(Int.) MxPS=   4 Ivl=10ms\r\n\r\nT:  Bus=02 Lev=00 Prnt=00 Port=00 Cnt=00 Dev#=  1 Spd=5000 MxCh= 1\r\nB:  Alloc=  0/800 us ( 0%), #Int=  0, #Iso=  0\r\nD:  Ver= 3.00 Cls=09(hub  ) Sub=00 Prot=03 MxPS= 9 #Cfgs=  1\r\nP:  Vendor=1d6b ProdID=0003 Rev= 6.05\r\nS:  Manufacturer=Linux 6.5.0-rc4 xhci-hcd\r\nS:  Product=xHCI Host Controller\r\nS:  SerialNumber=xhci-hcd.0.auto\r\nC:* #Ifs= 1 Cfg#= 1 Atr=e0 MxPwr=  0mA\r\nI:* If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=00 Driver=hub\r\nE:  Ad=81(I) Atr=03(Int.) MxPS=   4 Ivl=256ms\n"})})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}}}]);