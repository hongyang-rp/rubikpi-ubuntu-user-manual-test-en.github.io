"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[669],{28453:(e,i,s)=>{s.d(i,{R:()=>o,x:()=>r});var n=s(96540);const t={},l=n.createContext(t);function o(e){const i=n.useContext(l);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),n.createElement(l.Provider,{value:i},e.children)}},80421:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"Document Home/Application Development and Execution Guide/IMSDK/Update JSON Config","title":"Update JSON Config","description":"This section provides a flexible workflow for running and customizing advanced multimedia and AI sample applications using the Qualcomm\xae Intelligent Multimedia Product (QIMP) SDK on Ubuntu. Developers can define input/output sources, runtime targets, and model precision using JSON configuration files\u2014enabling seamless evaluation across CPU, GPU, and DSP. With support for frameworks like TFLite, QNN, and SNPE, and integration with AI Hub, this setup is ideal for building and optimizing edge AI pipelines tailored to specific use cases.","source":"@site/docs/Document Home/5.Application Development and Execution Guide/3.IMSDK/1.Update JSON Config.md","sourceDirName":"Document Home/5.Application Development and Execution Guide/3.IMSDK","slug":"/Document Home/Application Development and Execution Guide/IMSDK/Update JSON Config","permalink":"/rubikpi-ubuntu-user-manual-test-en.github.io/docs/Document Home/Application Development and Execution Guide/IMSDK/Update JSON Config","draft":false,"unlisted":false,"editUrl":"https://github.com/hongyang-rp/rubikpi-ubuntu-user-manual-test-en.github.io/tree/main/docs/Document Home/5.Application Development and Execution Guide/3.IMSDK/1.Update JSON Config.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Genie","permalink":"/rubikpi-ubuntu-user-manual-test-en.github.io/docs/Document Home/Application Development and Execution Guide/Framework-Driven AI Sample Execution/genie"},"next":{"title":"Customize existing Sample Applications","permalink":"/rubikpi-ubuntu-user-manual-test-en.github.io/docs/Document Home/Application Development and Execution Guide/IMSDK/Customize-Sample"}}');var t=s(74848),l=s(28453);const o={},r="Update JSON Config",c={},a=[{value:"Pre-requisites",id:"pre-requisites",level:2},{value:"On Target",id:"on-target",level:4},{value:"Explanation",id:"explanation",level:4},{value:"Check the following directories:",id:"check-the-following-directories",level:4},{value:"What to Do",id:"what-to-do",level:4},{value:"Configuration Parameters",id:"configuration-parameters",level:4},{value:"Sample Application Configuration Matrix",id:"sample-application-configuration-matrix",level:2},{value:"Example",id:"example",level:4},{value:"Reference Docs:",id:"reference-docs",level:3}];function d(e){const i={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components},{Details:s}=i;return s||function(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"update-json-config",children:"Update JSON Config"})}),"\n",(0,t.jsx)(i.p,{children:"This section provides a flexible workflow for running and customizing advanced multimedia and AI sample applications using the Qualcomm\xae Intelligent Multimedia Product (QIMP) SDK on Ubuntu. Developers can define input/output sources, runtime targets, and model precision using JSON configuration files\u2014enabling seamless evaluation across CPU, GPU, and DSP. With support for frameworks like TFLite, QNN, and SNPE, and integration with AI Hub, this setup is ideal for building and optimizing edge AI pipelines tailored to specific use cases."}),"\n",(0,t.jsxs)(i.p,{children:["Running advanced multimedia and AI sample applications using the ",(0,t.jsx)(i.strong,{children:"QIMP SDK"})," on Ubuntu enables developers to:"]}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Prototype and validate AI workloads"})," across heterogeneous compute targets (CPU, GPU, DSP), helping teams choose the most efficient runtime for their use case."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Customize application behavior"})," using JSON-based configuration, allowing precise control over input/output sources, model types, and runtime parameters."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Accelerate development and deployment"})," by leveraging pre-integrated models from AI Hub and supported frameworks like TFLite, QNN, and SNPE."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Benchmark performance and optimize resource usage"}),", which is critical for embedded systems and edge devices where compute and power budgets are constrained."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Ensure compatibility and reproducibility"})," across Qualcomm platforms by using standardized scripts and directory structures for models, labels, and media assets."]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"pre-requisites",children:"Pre-requisites"}),"\n",(0,t.jsx)(i.h4,{id:"on-target",children:"On Target"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.strong,{children:"Ubuntu OS should be flashed"})}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Terminal access"})," with appropriate permissions."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Run install_ppa_pkgs.sh script"})," to install necessary packages"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Basic familiarity with JSON configuration files"})," and runtime environment variables."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Access to AI Hub"})," for model selection and export. ",(0,t.jsx)(i.a,{href:"https://aihub.qualcomm.com/",children:(0,t.jsx)(i.strong,{children:"Create AI Hub account"})})]}),"\n"]}),"\n",(0,t.jsxs)(i.p,{children:["Follow the steps below to confirgure the script and run a model.",(0,t.jsx)(i.br,{}),"\n",(0,t.jsx)(i.strong,{children:"1:"})," Download and Run the Script\r\nThis script will automatically fetch all required packages for running the sample applications, including:"]}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Models"}),"\n",(0,t.jsx)(i.li,{children:"Labels"}),"\n",(0,t.jsx)(i.li,{children:"Media files"}),"\n"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-shell",children:"cd /home/ubuntu \r\ncurl -L -O https://raw.githubusercontent.com/quic/sample-apps-for-qualcomm-linux/refs/heads/main/download_artifacts.sh\r\nsudo chmod +x download_artifacts.sh \r\nsudo ./download_artifacts.sh -v GA1.5-rel -c QCS6490\n"})}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.h4,{id:"explanation",children:"Explanation"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["Use the ",(0,t.jsx)(i.code,{children:"-v"})," flag to define the ",(0,t.jsx)(i.strong,{children:"version"})," you want to work with (e.g., GA1.5-rel)."]}),"\n",(0,t.jsxs)(i.li,{children:["Use the ",(0,t.jsx)(i.code,{children:"-c"})," flag to define the ",(0,t.jsx)(i.strong,{children:"chipset"})," your device is using.(e.g., QCS6490)."]}),"\n"]}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"2:"})," Verify Model/Label/Media Files",(0,t.jsx)(i.br,{}),"\n","Before launching any sample applications, make sure the required files are in place."]}),"\n",(0,t.jsx)(i.h4,{id:"check-the-following-directories",children:"Check the following directories:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Model files"})," \u2192 ",(0,t.jsx)(i.code,{children:"/etc/models/"})]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Label files"})," \u2192 ",(0,t.jsx)(i.code,{children:"/etc/labels/"})]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Media files"})," \u2192 ",(0,t.jsx)(i.code,{children:"/etc/media/"})]}),"\n"]}),"\n",(0,t.jsxs)(i.admonition,{type:"note",children:[(0,t.jsx)(i.mdxAdmonitionTitle,{}),(0,t.jsx)(i.p,{children:"These files are essential for AI and multimedia apps to function correctly. If they\u2019re missing, re-run the artifact download script."})]}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"3:"})," Updating JSON Config File",(0,t.jsx)(i.br,{}),"\n","To run sample applications with a specific functionality, you\u2019ll need a properly configured JSON file."]}),"\n",(0,t.jsx)(i.h4,{id:"what-to-do",children:"What to Do"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["Update the required JSON config file based on your ",(0,t.jsx)(i.strong,{children:"model"})," and ",(0,t.jsx)(i.strong,{children:"config requirements"}),"."]}),"\n",(0,t.jsxs)(i.li,{children:["Edit the file at ",(0,t.jsx)(i.code,{children:"e.g. - /etc/configs/config_classification.json"})," to match your use case:"]}),"\n"]}),"\n",(0,t.jsx)(i.h4,{id:"configuration-parameters",children:"Configuration Parameters"}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)(i.p,{children:"Update your JSON config file with the following key parameters:"}),(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Input Source"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Camera"}),"\n",(0,t.jsx)(i.li,{children:"File (Filesrc)"}),"\n",(0,t.jsx)(i.li,{children:"RTSP Stream"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Output Source"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Waylandsink"}),"\n",(0,t.jsx)(i.li,{children:"Filesink"}),"\n",(0,t.jsx)(i.li,{children:"RTSP Stream"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Runtime Options"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"CPU"}),"\n",(0,t.jsx)(i.li,{children:"GPU"}),"\n",(0,t.jsx)(i.li,{children:"DSP"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Precision"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"INT8 / INT16"}),"\n",(0,t.jsx)(i.li,{children:"W8A8 / W8A16"}),"\n",(0,t.jsx)(i.li,{children:"FP32"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Model Type"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["Select from available models in ",(0,t.jsx)(i.strong,{children:"AI Hub"})]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,t.jsx)(i.h2,{id:"sample-application-configuration-matrix",children:"Sample Application Configuration Matrix"}),"\n",(0,t.jsxs)(i.table,{children:[(0,t.jsx)(i.thead,{children:(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.th,{children:"Sample App Name"}),(0,t.jsx)(i.th,{children:"Details"}),(0,t.jsx)(i.th,{children:"AI Hub Model Type"}),(0,t.jsx)(i.th,{children:"Runtime"}),(0,t.jsx)(i.th,{children:"Script to Use"})]})}),(0,t.jsxs)(i.tbody,{children:[(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"gst-ai-classification"}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"https://docs.qualcomm.com/bundle/publicresource/topics/80-70020-50/gst-ai-classification.html",children:"Image classification"})}),(0,t.jsx)(i.td,{children:"MobileNet-v2, ResNet101, GoogLeNet, MobileNet-v3-Large, ResNet18, ResNeXt50, ResNeXt101, SqueezeNet, WideResNet50, Shufflenet"}),(0,t.jsx)(i.td,{children:"CPU, GPU, DSP"}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"https://git.codelinaro.org/clo/le/platform/vendor/qcom-opensource/gst-plugins-qti-oss/-/blob/imsdk.lnx.2.0.0.r2-rel/gst-sample-apps/gst-ai-classification/config_classification.json?ref_type=heads",children:"Update JSON"})})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"gst-ai-object-detection"}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"https://docs.qualcomm.com/bundle/publicresource/topics/80-70020-50/gst-ai-object-detection.html",children:"Object detection"})}),(0,t.jsx)(i.td,{children:"Yolox, Yolov7, Yolov8-Detection (manual export)"}),(0,t.jsx)(i.td,{children:"CPU, GPU, DSP"}),(0,t.jsxs)(i.td,{children:["Export model from AI Hub; Update script for Yolox/Yolov7 \u2013 ",(0,t.jsx)(i.a,{href:"https://git.codelinaro.org/clo/le/platform/vendor/qcom-opensource/gst-plugins-qti-oss/-/blob/imsdk.lnx.2.0.0.r2-rel/gst-sample-apps/gst-ai-classification/config_classification.json?ref_type=heads",children:"Update JSON"})]})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"gst-ai-pose-detection"}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"https://docs.qualcomm.com/bundle/publicresource/topics/80-70020-50/gst-ai-pose-detection.html",children:"Pose detection"})}),(0,t.jsx)(i.td,{children:"hrnet_pose"}),(0,t.jsx)(i.td,{children:"CPU, GPU, DSP"}),(0,t.jsxs)(i.td,{children:["TFLite works by default; update script for precision/runtime \u2013 ",(0,t.jsx)(i.a,{href:"https://git.codelinaro.org/clo/le/platform/vendor/qcom-opensource/gst-plugins-qti-oss/-/blob/imsdk.lnx.2.0.0.r2-rel/gst-sample-apps/gst-ai-classification/config_classification.json?ref_type=heads",children:"Update JSON"})]})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"gst-ai-segmentation"}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"https://docs.qualcomm.com/bundle/publicresource/topics/80-70020-50/gst-ai-segmentation.html",children:"Image segmentation"})}),(0,t.jsx)(i.td,{children:"FFNet-40S, FFNet-54S, FFNet-78S"}),(0,t.jsx)(i.td,{children:"CPU, GPU, DSP"}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"https://git.codelinaro.org/clo/le/platform/vendor/qcom-opensource/gst-plugins-qti-oss/-/blob/imsdk.lnx.2.0.0.r2-rel/gst-sample-apps/gst-ai-classification/config_classification.json?ref_type=heads",children:"Update JSON"})})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"gst-ai-superresolution"}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"https://docs.qualcomm.com/bundle/publicresource/topics/80-70020-50/video-super-resolution.html",children:"Video super-resolution"})}),(0,t.jsx)(i.td,{children:"quicksrnetsmall, QuickSRNetMedium, QuickSRNetLarge, XLSR"}),(0,t.jsx)(i.td,{children:"CPU, GPU, DSP"}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"https://git.codelinaro.org/clo/le/platform/vendor/qcom-opensource/gst-plugins-qti-oss/-/blob/imsdk.lnx.2.0.0.r2-rel/gst-sample-apps/gst-ai-classification/config_classification.json?ref_type=heads",children:"Update JSON"})})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"gst-ai-multistream-batch-inference"}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"https://docs.qualcomm.com/bundle/publicresource/topics/80-70020-50/multistream-batch-inference.html",children:"Multistream batch inference"})}),(0,t.jsx)(i.td,{children:"YoloV8-Detection (batch 4), DeeplabV3 (batch 4)"}),(0,t.jsx)(i.td,{children:"CPU, GPU, DSP"}),(0,t.jsxs)(i.td,{children:["Export model from AI Hub; Update script \u2013 ",(0,t.jsx)(i.a,{href:"https://git.codelinaro.org/clo/le/platform/vendor/qcom-opensource/gst-plugins-qti-oss/-/blob/imsdk.lnx.2.0.0.r2-rel/gst-sample-apps/gst-ai-classification/config_classification.json?ref_type=heads",children:"Update JSON"})]})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"gst-ai-face-detection"}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"https://docs.qualcomm.com/bundle/publicresource/topics/80-70020-50/gst-ai-face-detection.html",children:"Face detection"})}),(0,t.jsx)(i.td,{children:"face_det_lite"}),(0,t.jsx)(i.td,{children:"CPU, GPU, DSP"}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"https://git.codelinaro.org/clo/le/platform/vendor/qcom-opensource/gst-plugins-qti-oss/-/blob/imsdk.lnx.2.0.0.r2-rel/gst-sample-apps/gst-ai-classification/config_classification.json?ref_type=heads",children:"Update JSON"})})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"gst-ai-face-recognition"}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"https://docs.qualcomm.com/bundle/publicresource/topics/80-70020-50/gst-ai-face-recognition.html",children:"Face recognition"})}),(0,t.jsx)(i.td,{children:"face_det_lite, face_attrib_net, facemap_3dmm"}),(0,t.jsx)(i.td,{children:"CPU, GPU, DSP"}),(0,t.jsx)(i.td,{children:"Face registration required; otherwise output is 'unknown face recognized'"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"gst-ai-metadata-parser-example"}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"https://docs.qualcomm.com/bundle/publicresource/topics/80-70020-50/gst-ai-metadata-parser.html",children:"Metadata parsing"})}),(0,t.jsx)(i.td,{children:"Yolov8-Detection"}),(0,t.jsx)(i.td,{children:"CPU, GPU, DSP"}),(0,t.jsx)(i.td,{children:"Export model from AI Hub"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"gst-ai-usb-camera-app"}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"https://docs.qualcomm.com/bundle/publicresource/topics/80-70020-50/gst-ai-metadata-parser.html",children:"AI USB camera"})}),(0,t.jsx)(i.td,{children:"Yolov8-Detection"}),(0,t.jsx)(i.td,{children:"CPU, GPU, DSP"}),(0,t.jsx)(i.td,{children:"Export model from AI Hub"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"gst-ai-parallel-inference"}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"https://docs.qualcomm.com/bundle/publicresource/topics/80-70020-50/gst-ai-parallel-inference.html",children:"Parallel inferencing"})}),(0,t.jsx)(i.td,{children:"Yolov8-Detection, Deeplab, Hrnet, Inceptionv3"}),(0,t.jsx)(i.td,{children:"CPU, GPU, DSP"}),(0,t.jsxs)(i.td,{children:["Export model from AI Hub; ",(0,t.jsx)(i.a,{href:"https://git.codelinaro.org/clo/le/platform/vendor/qcom-opensource/gst-plugins-qti-oss/-/blob/imsdk.lnx.2.0.0.r2-rel/gst-sample-apps/gst-ai-classification/config_classification.json?ref_type=heads",children:"Update JSON"}),"  for other models"]})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"gst-ai-daisychain-detection-classification"}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"https://docs.qualcomm.com/bundle/publicresource/topics/80-70020-50/daisy-chain-detection-and-classification.html",children:"Daisy chain detection and classification"})}),(0,t.jsx)(i.td,{children:"Inceptionv3 + YoloV8"}),(0,t.jsx)(i.td,{children:"CPU, GPU, DSP"}),(0,t.jsxs)(i.td,{children:["Export model from AI Hub; ",(0,t.jsx)(i.a,{href:"https://git.codelinaro.org/clo/le/platform/vendor/qcom-opensource/gst-plugins-qti-oss/-/blob/imsdk.lnx.2.0.0.r2-rel/gst-sample-apps/gst-ai-classification/config_classification.json?ref_type=heads",children:"Update JSON"}),"  for other models"]})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"gst-ai-audio-classification"}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"https://docs.qualcomm.com/bundle/publicresource/topics/80-70020-50/audio-classification.html",children:"Audio classification"})}),(0,t.jsx)(i.td,{children:"Inceptionv3 + YoloV8"}),(0,t.jsx)(i.td,{children:"CPU, GPU, DSP"}),(0,t.jsxs)(i.td,{children:["Export model from AI Hub; ",(0,t.jsx)(i.a,{href:"https://git.codelinaro.org/clo/le/platform/vendor/qcom-opensource/gst-plugins-qti-oss/-/blob/imsdk.lnx.2.0.0.r2-rel/gst-sample-apps/gst-ai-classification/config_classification.json?ref_type=heads",children:"Update JSON"}),"  for other models"]})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"gst-ai-smartcodec-example"}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"https://docs.qualcomm.com/bundle/publicresource/topics/80-70020-50/ai-smart-codec.html",children:"AI smart codecn"})}),(0,t.jsx)(i.td,{children:"Inceptionv3 + YoloV8"}),(0,t.jsx)(i.td,{children:"CPU, GPU, DSP"}),(0,t.jsxs)(i.td,{children:["Export model from AI Hub; ",(0,t.jsx)(i.a,{href:"https://git.codelinaro.org/clo/le/platform/vendor/qcom-opensource/gst-plugins-qti-oss/-/blob/imsdk.lnx.2.0.0.r2-rel/gst-sample-apps/gst-ai-classification/config_classification.json?ref_type=heads",children:"Update JSON"}),"  for other models"]})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"setup_hw_benchmarking_app"}),(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"https://docs.qualcomm.com/bundle/publicresource/topics/80-70020-50/vision_ai_demo_app.html",children:"Hardware benchmarking application"})}),(0,t.jsx)(i.td,{children:"Inceptionv3,fcn_resnet50,hrnet_pose,midas.yolox"}),(0,t.jsx)(i.td,{children:"CPU, GPU, DSP"}),(0,t.jsxs)(i.td,{children:["Export model from AI Hub; ",(0,t.jsx)(i.a,{href:"https://git.codelinaro.org/clo/le/platform/vendor/qcom-opensource/gst-plugins-qti-oss/-/blob/imsdk.lnx.2.0.0.r2-rel/gst-sample-apps/gst-ai-classification/config_classification.json?ref_type=heads",children:"Update JSON"}),"  for other models"]})]})]})]}),"\n",(0,t.jsx)(i.p,{children:"Use the SSH/SBC terminal to launch your sample application."}),"\n",(0,t.jsx)(i.admonition,{type:"note",children:(0,t.jsx)(i.p,{children:"In case if the terminal is in root, the we need to set the following environment. Otherwise for ubuntu user, it is not required.\r\nexport XDG_RUNTIME_DIR=/run/user/$(id -u ubuntu)"})}),"\n",(0,t.jsx)(i.h4,{id:"example",children:"Example"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-shell",children:"gst-ai-classification\n"})}),"\n",(0,t.jsx)(i.p,{children:"To display the available help options, run the following command in the SSH shell:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"gst-ai-classification -h\n"})}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"To stop the use case, use CTRL + C"})}),"\n",(0,t.jsx)(i.h3,{id:"reference-docs",children:"Reference Docs:"}),"\n",(0,t.jsxs)(i.p,{children:["To further explore sample applications, see the Qualcomm Intelligent Multimedia SDK (IM SDK) Reference Guide. ",(0,t.jsx)(i.a,{href:"https://docs.qualcomm.com/bundle/publicresource/topics/80-70020-50/example-applications.html",children:"Qualcomm Intelligent Multimedia SDK (IM SDK) Reference"})]})]})}function h(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);